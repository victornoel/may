/*
 * generated by Xtext
 */
package fr.irit.smac.may.speadl.formatting

import com.google.inject.Inject
import fr.irit.smac.may.speadl.services.SpeADLGrammarAccess
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class SpeADLFormatter extends AbstractDeclarativeFormatter {

	@Inject extension SpeADLGrammarAccess
	@Inject XbaseGrammarAccess xbase
	
	override protected void configureFormatting(FormattingConfig c) {
		
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)
		
		// find common keywords an specify formatting for them
		findKeywordPairs("(", ")").forEach [p|
			c.setNoSpace().around(p.first) // was after..
			c.setNoSpace().before(p.second)
		]
		findKeywordPairs("[", "]").forEach [p|
			c.setNoSpace().around(p.first)
			c.setNoSpace().before(p.second)
		]
		// See http://www.eclipse.org/forums/index.php?t=msg&th=205497
		findKeywordPairs("{", "}").forEach [p|
			c.setLinewrap().after(p.first)
			c.setIndentationIncrement().after(p.first)
			c.setLinewrap().before(p.second)
			c.setIndentationDecrement().before(p.second)
		]
		findKeywords(",").forEach[k|
			c.setNoSpace().before(k)
		]
		findKeywords(".").forEach[k|
			c.setNoSpace().around(k)
		]
		findKeywords(":").forEach[k|
			c.setNoSpace().before(k)
			c.setSpace(" ").after(k)
		]

		c.setLinewrap(1, 1, 2).around(ecosystemRule)
		c.setLinewrap(1, 1, 2).around(componentRule)
		c.setLinewrap(1, 1, 2).around(namespaceRule)
		
		c.setLinewrap(1, 1, 2).around(providedPortRule)
		c.setLinewrap(1, 1, 2).around(requiredPortRule)

		c.setLinewrap(1, 1, 2).around(componentPartRule)
		c.setLinewrap(1, 1, 2).around(speciesPartRule)
		c.setLinewrap(1, 1, 2).around(speciesRule)

		c.setLinewrap(1, 1, 2).around(bindingRule)
		
		c.setLinewrap.around(xbase.XImportDeclarationRule)
		c.setLinewrap(2,2,2).after(xbase.XImportSectionRule)
	}
}
