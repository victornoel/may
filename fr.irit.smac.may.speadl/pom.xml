<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>fr.irit.smac.may</groupId>
		<artifactId>fr.irit.smac.may.speadl.parent</artifactId>
		<version>3.2.3-SNAPSHOT</version>
		<relativePath>../fr.irit.smac.may.speadl.parent/pom.xml</relativePath>
	</parent>

	<artifactId>fr.irit.smac.may.speadl</artifactId>
	<packaging>eclipse-plugin</packaging>
	<build>
		<plugins>
			<!-- Clean the src-gen folders of the ui and test project. The Xtext generator 
				will create files in those directories during generation. The ui and test 
				project will *not* clean those directories later. It is disabled because 
				we want them to be versionned: note that src-gen and model are cleaned by 
				GenerateSpeADL.mwe2 before generation so it is ok. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<!-- hack in order for the file not to be removed on clean but only 
							prior to code generation from xtend-maven-plugin
							and exec-maven-plugin -->
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>${basedir}/src-gen</directory>
								</fileset>
								<fileset>
									<directory>${basedir}/xtend-gen</directory>
								</fileset>
								<fileset>
									<directory>${basedir}/model</directory>
								</fileset>
								<fileset>
									<directory>${basedir}/../${project.artifactId}.ui/src-gen</directory>
								</fileset>
								<fileset>
									<directory>${basedir}/../${project.artifactId}.ui/xtend-gen</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includeProjectDependencies>false</includeProjectDependencies>
					<includePluginDependencies>true</includePluginDependencies>
					<mainClass>org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher</mainClass>
					<arguments>
						<argument>${project.basedir}/src/fr/irit/smac/may/speadl/GenerateSpeADL.mwe2</argument>
						<argument>-p</argument>
						<argument>runtimeProject=/${project.basedir}</argument>
					</arguments>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.xtext</groupId>
						<artifactId>org.eclipse.xtext.xtext</artifactId>
						<version>${xtext.version}</version>
					</dependency>
					<dependency>
						<groupId>org.eclipse.xtext</groupId>
						<artifactId>org.eclipse.xtext.xbase</artifactId>
						<version>${xtext.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.eclipse.xtend</groupId>
				<artifactId>xtend-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-clean-plugin
										</artifactId>
										<versionRange>
											[2.5,)
										</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
