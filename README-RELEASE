Release procedure:

 * Go in parent directory
  -> cd fr.irit.smac.may.speadl.parent

 * Increase memory
  -> export MAVEN_OPTS="-Xmx512m -XX:MaxPermSize=256m"

 * Prepare for release
  * Change the version to a fixed one (for example, if we were to 3.4.0-SNAPSHOT, go to 3.4.0) (note: it won't change the osgi versions, on purpose to keep the qualifier)
    -> mvn -Dtycho.mode=maven versions:set -DnewVersion=3.4.0
  * Commit and tag the release
    -> hg commit -m "prepare for 3.4.0 release"
    -> hg tag v3.4.0

 * Do the release
  * Compile, install in the local repository and deploy:
    -> mvn clean deploy -P release
  * Note: tycho-p2-repository-plugin insists to clean between two explicit phases and this removes the repository before deployment or install, so do not call install or package at the same time than deploy (they are implied by it anyway)

 * Update the web repository
  -> cd ../fr.irit.smac.may.speadl.updatesite
  -> ./get-repository-append-artifacts-push-back-repository.sh
 * Note: If the repository was cleaned by tycho-p2-repository-plugin, you can run "mvn package" to rebuild it
    
 * Increment for development
  * Revert the version change (needed for the next command to succeed updating osgi versions)
    -> mvn -Dtycho.mode=maven versions:set -DnewVersion=3.4.0-SNAPSHOT
  * Change the version (it will change the osgi version AND the pom versions)
    -> mvn -Dtycho.mode=maven org.eclipse.tycho:tycho-versions-plugin:set-version -DnewVersion=3.4.1-SNAPSHOT
  * Commit
    -> hg commit -m "increment to 3.4.0 development version"

 * Develop!


Notes:
 * -Dtycho.mode=maven prevents tycho from resolving the p2 repositories when not needed (clean, set-version...)
 * -P release enables to generate the javadoc, the source package and to sign the packages for deployement to maven central
